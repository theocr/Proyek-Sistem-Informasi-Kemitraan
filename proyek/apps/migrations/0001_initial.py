# Generated by Django 4.1.7 on 2023-05-10 04:49

import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Barang',
            fields=[
                ('id_barang', models.BigAutoField(primary_key=True, serialize=False)),
                ('nama_barang', models.CharField(max_length=50)),
                ('stok_gudang', models.IntegerField()),
                ('satuan', models.CharField(max_length=10)),
                ('deskripsi', models.TextField()),
            ],
        ),
        migrations.CreateModel(
            name='FAQ',
            fields=[
                ('id_faq', models.BigAutoField(primary_key=True, serialize=False)),
                ('pertanyaan', tinymce.models.HTMLField()),
                ('jawaban', tinymce.models.HTMLField()),
            ],
        ),
        migrations.CreateModel(
            name='LevelPaket',
            fields=[
                ('id_level_paket', models.BigAutoField(primary_key=True, serialize=False)),
                ('nama_paket', models.CharField(max_length=7)),
                ('kuota_cacing', models.IntegerField()),
                ('kuota_media_budidaya', models.IntegerField()),
                ('biaya_paket', models.IntegerField()),
                ('kuota_panen', models.IntegerField()),
                ('harga_panen', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Mitra',
            fields=[
                ('id_mitra', models.BigAutoField(primary_key=True, serialize=False)),
                ('nama_mitra', models.CharField(max_length=50)),
                ('tgl_lahir', models.DateField()),
                ('jenis_kelamin', models.CharField(choices=[('Pria', 'Pria'), ('Wanita', 'Wanita'), ('-', '-')], default='-', max_length=20)),
                ('alamat', models.TextField()),
                ('no_hp', models.CharField(max_length=20)),
                ('pendidikan', models.CharField(choices=[('SD', 'SD'), ('SMP', 'SMP'), ('SMA', 'SMA'), ('Sarjana S1', 'Sarjana S1')], default='SMA', max_length=20)),
                ('pelatihan', tinymce.models.HTMLField()),
                ('pengalaman_budidaya', tinymce.models.HTMLField()),
                ('motivasi_bermitra', tinymce.models.HTMLField()),
                ('periode_kontrak', models.IntegerField()),
                ('tgl_registrasi', models.DateField(default=datetime.datetime.now)),
                ('id_level_paket', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.levelpaket')),
            ],
        ),
        migrations.CreateModel(
            name='Pegawai',
            fields=[
                ('id_pegawai', models.BigAutoField(primary_key=True, serialize=False)),
                ('nama_pegawai', models.CharField(max_length=50)),
                ('tgl_lahir', models.DateField()),
                ('alamat', models.TextField()),
                ('pendidikan', models.CharField(choices=[('SD', 'SD'), ('SMP', 'SMP'), ('SMA', 'SMA'), ('S1', 'Sarjana S1')], default='SMA', max_length=20)),
                ('pelatihan', tinymce.models.HTMLField()),
                ('pengalaman_kerja', tinymce.models.HTMLField()),
            ],
        ),
        migrations.CreateModel(
            name='Pelatihan',
            fields=[
                ('id_pelatihan', models.BigAutoField(primary_key=True, serialize=False)),
                ('status_pendaftaran', models.CharField(choices=[('TUTUP', 'TUTUP'), ('AKTIF', 'AKTIF'), ('BELUM AKTIF', 'BELUM AKTIF')], default='BELUM AKTIF', max_length=20)),
                ('jenis_pelatihan', models.TextField()),
                ('nama_pelatihan', models.TextField()),
                ('gelombang', models.TextField()),
                ('kuota', models.IntegerField()),
                ('awal_periode_pendaftaran', models.DateField()),
                ('akhir_periode_pendaftaran', models.DateField()),
                ('awal_periode_pelatihan', models.DateField()),
                ('akhir_periode_pelatihan', models.DateField()),
                ('tempat_penyelenggaraan', models.TextField()),
                ('contact_person', models.TextField()),
                ('link_pendaftaran', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='ProgressBudidaya',
            fields=[
                ('id_progress_budidaya', models.BigAutoField(primary_key=True, serialize=False)),
                ('tgl_pengamatan', models.DateField(default=datetime.datetime.now)),
                ('lokasi_budidaya', models.CharField(max_length=100)),
                ('kondisi_media_budidaya', tinymce.models.HTMLField()),
                ('perkembangan_cacing', tinymce.models.HTMLField()),
                ('keluhan', tinymce.models.HTMLField()),
                ('penilaian_gudang', models.CharField(choices=[('TERKONTROL', 'TERKONTROL'), ('PERLU PENGAWASAN', 'PERLU PENGAWASAN')], default='PERLU PENGAWASAN', max_length=20)),
                ('id_mitra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.mitra')),
            ],
        ),
        migrations.CreateModel(
            name='Panen',
            fields=[
                ('id_panen', models.BigAutoField(primary_key=True, serialize=False)),
                ('tgl_panen', models.DateField(default=datetime.datetime.now)),
                ('berat_hasil_panen', models.IntegerField()),
                ('catatan_kelayakan_hasil_panen', tinymce.models.HTMLField()),
                ('id_mitra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.mitra')),
            ],
        ),
        migrations.CreateModel(
            name='Notifikasi',
            fields=[
                ('id_notifikasi', models.BigAutoField(primary_key=True, serialize=False)),
                ('judul', tinymce.models.HTMLField()),
                ('pesan', tinymce.models.HTMLField()),
                ('tgl_post', models.DateField(default=datetime.datetime.now)),
                ('status_pelaksanaan', models.CharField(choices=[('DONE', 'DONE'), ('PROGRESS', 'PROGRESS')], default='PROGRESS', max_length=20)),
                ('id_mitra', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.mitra')),
            ],
        ),
        migrations.CreateModel(
            name='BarangMasuk',
            fields=[
                ('id_barang_masuk', models.BigAutoField(primary_key=True, serialize=False)),
                ('tgl_masuk_gudang', models.DateField(default=datetime.datetime.now)),
                ('kuantitas_masuk', models.IntegerField()),
                ('keterangan', models.TextField()),
                ('id_barang', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.barang')),
            ],
        ),
        migrations.CreateModel(
            name='BarangKeluar',
            fields=[
                ('id_barang_keluar', models.BigAutoField(primary_key=True, serialize=False)),
                ('tgl_keluar_gudang', models.DateField(default=datetime.datetime.now)),
                ('kuantitas_pengambilan', models.IntegerField()),
                ('keterangan', models.TextField()),
                ('id_barang', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='apps.barang')),
                ('id_mitra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.mitra')),
            ],
        ),
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_mitra', models.BooleanField(default=False, verbose_name='Role Mitra')),
                ('is_admin', models.BooleanField(default=False, verbose_name='Role Admin')),
                ('is_gudang', models.BooleanField(default=False, verbose_name='Role Gudang')),
                ('is_owner', models.BooleanField(default=False, verbose_name='Role Owner')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('id_mitra', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.mitra')),
                ('id_pegawai', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='apps.pegawai')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
    ]
